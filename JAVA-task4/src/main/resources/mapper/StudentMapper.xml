<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.pojo.Student">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="hot" jdbcType="BIGINT" property="hot" />
    <result column="createAt" jdbcType="BIGINT" property="createat" />
    <result column="updateAt" jdbcType="BIGINT" property="updateat" />
  </resultMap>
  <sql id="Base_Column_List">
    id, img, position, name, description, hot, createAt, updateAt
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pojo.Student">
    insert into student (id, img, position, 
      name, description, hot, 
      createAt, updateAt)
    values (#{id,jdbcType=BIGINT}, #{img,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{hot,jdbcType=BIGINT}, 
      #{createat,jdbcType=BIGINT}, #{updateat,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="createat != null">
        createAt,
      </if>
      <if test="updateat != null">
        updateAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=BIGINT},
      </if>
      <if test="createat != null">
        #{createat,jdbcType=BIGINT},
      </if>
      <if test="updateat != null">
        #{updateat,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Student">
    update student
    <set>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=BIGINT},
      </if>
      <if test="createat != null">
        createAt = #{createat,jdbcType=BIGINT},
      </if>
      <if test="updateat != null">
        updateAt = #{updateat,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Student">
    update student
    set img = #{img,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      hot = #{hot,jdbcType=BIGINT},
      createAt = #{createat,jdbcType=BIGINT},
      updateAt = #{updateat,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>